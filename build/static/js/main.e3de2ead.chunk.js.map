{"version":3,"sources":["services/web3Utils.tsx","constants/tokens.tsx","contexts/TokensContext.tsx","Providers.tsx","services/connectors.ts","components/WalletButton.tsx","hooks/web3Hooks.ts","components/NavBar.tsx","hooks/useTokens.ts","components/UserProfile/UserBalance.tsx","components/UserProfile/UserTokens.tsx","components/UserProfile/UserProfile.tsx","components/Hero.tsx","components/Tokens.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["getLibrary","provider","library","Web3Provider","pollingInterval","getErrorMessage","error","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","console","getNetworkName","id","getNetworkToken","formatAccount","account","substring","length","Balance","useWeb3React","chainId","React","useState","balance","setBalance","useEffect","stale","getBalance","then","catch","formatEther","indexOf","tokensInfo","name","symbol","image","fee","contractPolygon","price","amount","TokensContext","createContext","TokensProvider","children","tokens","setTokens","map","token","i","Provider","value","Providers","RPC_URLS","1","process","RPC_URL_1","4","RPC_URL_4","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","walletlink","WalletLinkConnector","url","appName","WalletButton","showModal","setShowModal","handleClose","context","connector","activate","deactivate","activatingConnector","setActivatingConnector","undefined","suppress","active","ethereum","window","on","handleConnect","log","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","tried","setTried","isAuthorized","useEagerConnect","walletButtonText","Dropdown","align","Toggle","className","variant","Image","style","width","src","max-width","roundedCircle","Menu","Card","Header","Button","onClick","Body","Title","Text","Footer","Modal","show","onHide","closeButton","NavBar","networkStatus","GetSelectedNetworkStatus","Container","fluid","Navbar","collapseOnSelect","expand","Brand","href","alt","aria-controls","Collapse","Nav","useTokens","useContext","UserBalance","UserTokens","Table","index","handleWithdraw","UserProfile","Hero","Tokens","handleInvest","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3de2ead.chunk.js","sourcesContent":["import React from 'react'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { formatEther  } from '@ethersproject/units'\n\n\nexport function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 12000\n  return library\n}\n\nexport function getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected ||\n    error instanceof UserRejectedRequestErrorWalletConnect\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nexport function getNetworkName(id: number) {\n  switch (id) {\n    case 1: {\n      return 'Ethereum'\n    }\n    case 137: {\n      return 'Polygon'\n    }\n    default: {\n      return 'Not Connected'\n    }\n  }\n}\n\nexport function getNetworkToken(id: number) {\n  switch (id) {\n    case 1: {\n      return 'ETH'\n    }\n    case 137: {\n      return 'MATIC'\n    }\n    default: {\n      return 'Not Connected'\n    }\n  }\n}\n\nexport function GetSelectedNetworkStatus() {\n  const { chainId, error } = useWeb3React()\n  return (\n    <>\n      {chainId\n        ? getNetworkName(chainId)\n        : error\n        ? getErrorMessage(error)\n        : 'Not Connected'}\n    </>\n  )\n}\n\nexport function ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        ⛓\n      </span>\n      <span>{chainId ?? ''}</span>\n    </>\n  )\n}\n\n\nexport function BlockNumber() {\n  const { chainId, library } = useWeb3React()\n\n  const [blockNumber, setBlockNumber] = React.useState<number>()\n  React.useEffect((): any => {\n    if (!!library) {\n      let stale = false\n\n      library\n        .getBlockNumber()\n        .then((blockNumber: number) => {\n          if (!stale) {\n            setBlockNumber(blockNumber)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBlockNumber(0)\n          }\n        })\n\n      const updateBlockNumber = (blockNumber: number) => {\n        setBlockNumber(blockNumber)\n      }\n      library.on('block', updateBlockNumber)\n\n      return () => {\n        stale = true\n        library.removeListener('block', updateBlockNumber)\n        setBlockNumber(undefined)\n      }\n    }\n  }, [library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Block Number</span>\n      <span role=\"img\" aria-label=\"numbers\">\n        🔢\n      </span>\n      <span>{blockNumber === null ? 'Error' : blockNumber ?? ''}</span>\n    </>\n  )\n}\n\nexport function formatAccount(account: any) {\n  return account === null\n    ? '-'\n    : account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : ''\n}\n\nexport function Account() {\n  const { account } = useWeb3React()\n\n  return (\n    <>\n      <span>Account</span>\n      <span role=\"img\" aria-label=\"robot\">\n        🤖\n      </span>\n      <span>{formatAccount(account)}</span>\n    </>\n  )\n}\n\nexport function Balance() {\n  const { account, library, chainId } = useWeb3React()\n  const [balance, setBalance] = React.useState<string>()\n\n  React.useEffect((): any => {\n    if (!!account && !!library) {\n      let stale = false\n\n      library\n        .getBalance(account)\n        .then((balance: any) => {\n          if (!stale) {\n            setBalance(balance)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBalance('')\n          }\n        })\n\n      return () => {\n        stale = true\n        setBalance('')\n      }\n    }\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      {balance === null ? 'Error' : balance ? `${formatEther(balance).substring(0, formatEther(balance).indexOf('.') + 5)  + ' ' + getNetworkToken(chainId || 0)} ` : ''}\n    </>\n  )\n}\n","\nexport const tokensInfo = [\n    {\n      name: 'Common Sense Top10 Index',\n      symbol: 'CSTOP',\n      image: 'https://commonsense.finance/cs-static/cstop.png',\n      fee: '2%',\n      contractPolygon: '0xff3ee79CB4A7Fe0F78a3634cCfDbFc3CdCD65a64',\n      price: 15,\n      amount: 0,\n      balance: 0,\n    },\n    {\n      name: 'Tmatic & Teth ',\n      symbol: 'TST',\n      image: '',\n      fee: '0%',\n      contractPolygon: '0x04A250E193571A5621998F61bb258701c8a6034d',\n      price: 1,\n      amount: 0,\n      balance: 0,\n    },\n  ]\n","import { useWeb3React } from '@web3-react/core'\nimport { createContext, useEffect, useState } from 'react'\nimport { tokensInfo } from '../constants/tokens'\nimport { getTokenBalance } from '../services/tokenSetSDK'\n\ninterface TokenContextValues {\n  name: string | null | undefined\n  symbol: string\n  image: string\n  fee: string\n  contractPolygon: string\n  price: any\n  amount: any\n  balance: any\n}\n\ninterface TokensContextValues {\n  tokens?: TokenContextValues[]\n  balance?: any\n  setTokens?: any\n}\n\nexport const TokensContext = createContext<TokensContextValues>({})\n\nexport const TokensProvider: React.FC<any> = ({ children }) => {\n  const { account, library, chainId } = useWeb3React()\n  const [tokens, setTokens] = useState(tokensInfo)\n  const [balance, setBalance] = useState(0)\n\n  useEffect(() => {\n    setTokens(\n      tokens?.map((token, i) => {\n        return { ...token, balance: token.price * token.amount }\n      }),\n    )\n  }, [account, library, chainId])\n\n\n  useEffect(() => {\n    let balance = 0\n    tokens?.map((token, i) => {\n      balance = balance + (token.price * token.amount) \n    })\n    setBalance(balance)\n  }, [tokens])\n\n\n  return (\n    <TokensContext.Provider\n      value={{\n        tokens: tokens,\n        balance: balance,\n        setTokens: setTokens,\n      }}\n    >\n      {children}\n    </TokensContext.Provider>\n  )\n}\n","import React from 'react'\n\nimport { Web3ReactProvider } from '@web3-react/core'\n\nimport { getLibrary } from './services/web3Utils'\nimport { TokensProvider } from './contexts/TokensContext'\n\nconst Providers: React.FC = ({ children }) => (\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <TokensProvider>{children}</TokensProvider>\n  </Web3ReactProvider>\n)\nexport default Providers\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\n\n// const NETWORK_URL = 'https://mainnet.eth.aragon.network/'\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  1: process.env.RPC_URL_1 as string,\n  4: process.env.RPC_URL_4 as string\n}\n\n// export const network = new NetworkConnector({\n//   urls: { 1: RPC_URLS[1], 4: RPC_URLS[4] },\n//   defaultChainId: 1\n// })\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 137]\n})\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: RPC_URLS[1] },\n  qrcode: true\n})\n\nexport const walletlink = new WalletLinkConnector({\n  url: RPC_URLS[1],\n  appName: 'Common Sense Finance',\n  supportedChainIds: [1, 137]\n})\n","import React, { useState, useEffect } from 'react'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport {\n  injected,\n  // network,\n  walletconnect,\n  walletlink,\n} from '../services/connectors'\n\nimport {\n  Modal,\n  Button,\n  Dropdown,\n  Image,\n  Card,\n} from 'react-bootstrap'\n\nimport { formatAccount, getNetworkName, Balance } from '../services/web3Utils'\nimport { useEagerConnect, useInactiveListener } from '../hooks/web3Hooks'\n\n// enum ConnectorNames {\n//   Injected = 'Injected',\n//   // Network = 'Network',\n//   WalletConnect = 'WalletConnect',\n//   WalletLink = 'WalletLink',\n// }\n\n// const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n//   [ConnectorNames.Injected]: injected,\n//   // [ConnectorNames.Network]: network,\n//   [ConnectorNames.WalletConnect]: walletconnect,\n//   [ConnectorNames.WalletLink]: walletlink,\n// }\n\nconst WalletButton = () => {\n  const [showModal, setShowModal] = useState(false)\n\n  const handleClose = () => setShowModal(false)\n  const handleShow = () => setShowModal(true)\n\n  const context = useWeb3React<Web3Provider>()\n  const {\n    connector,\n    library,\n    chainId,\n    account,\n    activate,\n    deactivate,\n  } = context\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = useState<any>()\n\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  const walletButtonText = !!account ? formatAccount(account) : 'Connect Wallet'\n\n  return (\n    <>\n      {!!(library && account) ? (\n        <Dropdown align=\"end\">\n          <Dropdown.Toggle\n            className=\"border rounded-pill\"\n            variant=\"light\"\n            id=\"dropdown-basic\"\n          >\n            <Image\n              className=\"me-2\"\n              style={{ width: '20px' }}\n              src=\"placeholder.png\"\n              max-width=\"50px\"\n              roundedCircle\n            />\n            {walletButtonText}\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className=\"border-0\">\n            <Card style={{ width: '18rem' }}>\n              <Card.Header>\n                <span className=\"float-start\">\n                  <strong>Account</strong>\n                </span>\n\n                <Button\n                  className=\"btn-sm float-end\"\n                  variant=\"secondary\"\n                  onClick={() => {\n                    deactivate()\n                  }}\n                >\n                  Disconnect\n                </Button>\n              </Card.Header>\n              <Card.Body>\n                <Card.Title></Card.Title>\n                <Card.Text>\n                  <Image\n                    className=\"me-2\"\n                    style={{ width: '40px' }}\n                    src=\"placeholder.png\"\n                    max-width=\"50px\"\n                    roundedCircle\n                  />\n                  {walletButtonText}\n                  <div className=\"pt-3\">Balance</div>\n                  <div >\n                    <strong>\n                    <Balance />\n                    </strong>\n                    \n                  </div>\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer>\n                <span className=\"me-2 align-middle badge border border-light rounded-circle bg-success p-2\">\n                  <span className=\"visually-hidden\">unread messages</span>\n                </span>\n                <span className=\" align-middle\">\n                  {getNetworkName(chainId || 0)}\n                </span>\n              </Card.Footer>\n            </Card>\n          </Dropdown.Menu>\n        </Dropdown>\n      ) : (\n        <Button variant=\"primary\" onClick={handleShow}>\n          {walletButtonText}\n        </Button>\n      )}\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Select a wallet provider</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <Button\n            className=\"me-2\"\n            variant=\"light\"\n            onClick={() => {\n              activate(injected)\n              setShowModal(false)\n            }}\n          >\n            <Image\n                    className=\"me-2\"\n                    style={{ width: '25px' }}\n                    src=\"metamask-fox.svg\"\n                    max-width=\"50px\"\n            \n                  />\n            Metamask\n          </Button>\n          <Button\n          className=\"me-2\"\n            variant=\"light\"\n            onClick={() => {\n              activate(walletconnect)\n              setShowModal(false)\n            }}\n          >\n            <Image\n                    className=\"me-2\"\n                    style={{ width: '25px' }}\n                    src=\"wallet-connect.svg\"\n                    max-width=\"50px\"\n            \n                  />\n            WalletConnect\n          </Button>\n          <Button\n          className=\"me-2\"\n            variant=\"light\"\n            onClick={() => {\n              activate(walletlink)\n              setShowModal(false)\n            }}\n          >\n            <Image\n                    className=\"me-2\"\n                    style={{ width: '25px' }}\n                    src=\"coinbase-wallet.svg\"\n                    max-width=\"50px\"\n            \n                  />\n            WalletLink\n          </Button>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default WalletButton\n\n// <div>\n//         {Object.keys(connectorsByName).map((name) => {\n//           const currentConnector = null //connectorsByName[name]\n//           const activating = currentConnector === activatingConnector\n//           const connected = currentConnector === connector\n//           const disabled =\n//             !triedEager || !!activatingConnector || connected || !!error\n\n//           return (\n//             <button\n//               style={{\n//                 height: '3rem',\n//                 borderRadius: '1rem',\n//                 borderColor: activating\n//                   ? 'orange'\n//                   : connected\n//                   ? 'green'\n//                   : 'unset',\n//                 cursor: disabled ? 'unset' : 'pointer',\n//                 position: 'relative',\n//               }}\n//               disabled={disabled}\n//               key={name}\n//               onClick={() => {\n//                 setActivatingConnector(currentConnector)\n//                 activate(injected)\n//               }}\n//             >\n//               <div\n//                 style={{\n//                   position: 'absolute',\n//                   top: '0',\n//                   left: '0',\n//                   height: '100%',\n//                   display: 'flex',\n//                   alignItems: 'center',\n//                   color: 'black',\n//                   margin: '0 0 0 1rem',\n//                 }}\n//               >\n//                 {activating && (\n//                   <Spinner\n//                     color={'black'}\n//                     style={{ height: '25%', marginLeft: '-1rem' }}\n//                   />\n//                 )}\n//                 {connected && (\n//                   <span role=\"img\" aria-label=\"check\">\n//                     ✅\n//                   </span>\n//                 )}\n//               </div>\n//               {name}\n//             </button>\n//           )\n//         })}\n//       </div>\n\n//       <div\n//         style={{\n//           display: 'flex',\n//           flexDirection: 'column',\n//           alignItems: 'center',\n//         }}\n//       >\n//         {(active || error) && (\n//           <button\n//             style={{\n//               height: '3rem',\n//               marginTop: '2rem',\n//               borderRadius: '1rem',\n//               borderColor: 'red',\n//               cursor: 'pointer',\n//             }}\n//             onClick={() => {\n//               deactivate()\n//             }}\n//           >\n//             Deactivate\n//           </button>\n//         )}\n\n//         {!!error && (\n//           <h4 style={{ marginTop: '1rem', marginBottom: '0' }}>\n//             {getErrorMessage(error)}\n//           </h4>\n//         )}\n//       </div>\n\n//           {/* //Sign Message BUTON */}\n\n//       <hr style={{ margin: '2rem' }} />\n\n//       <div\n//         style={{\n//           display: 'grid',\n//           gridGap: '1rem',\n//           gridTemplateColumns: 'fit-content',\n//           maxWidth: '20rem',\n//           margin: 'auto',\n//         }}\n//       >\n//         {!!(library && account) && (\n//           <button\n//             style={{\n//               height: '3rem',\n//               borderRadius: '1rem',\n//               cursor: 'pointer',\n//             }}\n//             onClick={() => {\n//               library\n//                 .getSigner(account)\n//                 .signMessage('👋')\n//                 .then((signature: any) => {\n//                   window.alert(`Success!\\n\\n${signature}`)\n//                 })\n//                 .catch((error: any) => {\n//                   window.alert(\n//                     'Failure!' +\n//                       (error && error.message ? `\\n\\n${error.message}` : ''),\n//                   )\n//                 })\n//             }}\n//           >\n//             Sign Message\n//           </button>\n//         )}\n\n//       </div>\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { injected } from '../services/connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import { Navbar, Container, Nav, Button } from 'react-bootstrap'\n\nimport WalletButton from './WalletButton'\nimport { GetSelectedNetworkStatus } from '../services/web3Utils' \n\nexport const NavBar = () => {\n\n  const networkStatus = GetSelectedNetworkStatus()\n\n  return (\n    <Container fluid className=\"py-2\">\n      <Navbar collapseOnSelect expand=\"lg\">\n        <Container fluid>\n          <Navbar.Brand href=\"/\">\n            {' '}\n            <img src=\"csLogo.svg\" alt=\"\" width=\"200\"></img>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"me-auto\">\n\n              <Button variant=\"light\">\n                \n                \n                {networkStatus}\n              \n              \n              </Button>\n              \n              {/* <NavDropdown\n                title={networkStatus}\n                id=\"collasible-nav-dropdown\"\n                className=\"me-2\"\n              >\n                <NavDropdown.Item className=\"disabled\">\n                  Select Network\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#\">\n                  <img\n                    src={cryptoIcons.eth}\n                    alt=\"\"\n                    width=\"23\"\n                    className=\"me-2 rounded\"\n                  ></img>\n                  Ethereum\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#\">\n                  <img\n                    src={cryptoIcons.matic}\n                    alt=\"\"\n                    width=\"23\"\n                    className=\"me-2 rounded\"\n                  ></img>\n                  Polygon\n                </NavDropdown.Item>\n              </NavDropdown> */}\n\n            </Nav>\n            <Nav>\n              <WalletButton />\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </Container>\n  )\n}\n","import { useContext } from 'react'\n\nimport { TokensContext } from '../contexts/TokensContext'\n\nconst useTokens = () => {\n  return { ...useContext(TokensContext) }\n}\n\nexport default useTokens\n","import useTokens from \"../../hooks/useTokens\"\n\n\nexport const UserBalance = () => {\n    const { balance } = useTokens()\n\n    return (\n        <div className=\"bg-light text-center py-4\">\n            <p>My Balance</p>\n            <h2>\n\n                {balance}\n                \n                \n            </h2>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Container, Card, Table, Button } from 'react-bootstrap'\nimport useTokens from '../../hooks/useTokens'\n\nexport const UserTokens = () => {\n  const { tokens, setTokens } = useTokens()\n\n  const handleWithdraw = (index: any) => {\n    setTokens (\n      tokens?.map((token, i) => {\n        return (\n          (i === index) ? \n            {...token, \n              amount: token.amount - 1,\n              balance: token.price * (token.amount - 1)} : \n            {...token}\n        )\n          \n      }))\n  }\n\n  return (\n    <Container className=\"pt-5\">\n      <h4 className=\"pb-2\">My Invesments</h4>\n      <Card className=\"rounded\">\n        <Card.Body>\n          <Table className=\"table-borderless\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Symbol</th>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Amount</th>\n                <th>Balance</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"border-top\">\n              {tokens?.map(\n                (token, index) =>\n                  token.amount !== 0 && (\n                    <tr key={index}>\n                      <td>\n                        <img\n                          src={token.image}\n                          alt=\"\"\n                          width=\"23\"\n                          className=\"me-2 rounded\"\n                        ></img>\n                      </td>\n                      <td>{token.symbol}</td>\n                      <td>{token.name}</td>\n                      <td>{token.price}</td>\n                      <td>{token.amount}</td>\n                      <td>{token.balance}</td>\n                      <td>\n                        <Button\n                          className=\"me-2 btn-sm\"\n                          onClick={() => handleWithdraw(index)}\n                        >\n\n                            Withdraw\n                        </Button>\n                      </td>\n                    </tr>\n                  ),\n              )}\n            </tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { UserBalance } from './UserBalance'\nimport { UserTokens } from './UserTokens'\n\nexport const UserProfile = () => {\n    return (\n        <div>\n            <UserBalance />\n            <UserTokens />\n        </div>\n    )\n}\n","\nimport { useWeb3React } from '@web3-react/core'\nimport { Button } from 'react-bootstrap'\nimport { UserProfile } from './UserProfile/UserProfile'\nimport { ArrowUpRight } from 'react-bootstrap-icons';\n\n\nexport const Hero = () => {\n  const { active } = useWeb3React()\n\n  return (\n    <>\n      {active ? (\n        <UserProfile />\n      ) : (\n        <div className=\"bg-light text-center py-5\">\n          <h1>Investing in crypto, simplified</h1>\n          <div className=\"pb-5\">\n            We're helping people like you to have the same returns as geeks\n            through 'All in One' tokens.\n          </div>\n          <Button >Learn more <ArrowUpRight /></Button>\n        </div>\n      )}\n    </>\n  )\n}\n","\nimport { Container, Table, Button, Card } from 'react-bootstrap'\nimport useTokens from '../hooks/useTokens'\n\nexport const Tokens = () => {\n  const {tokens, setTokens} = useTokens()\n  \n  const handleInvest = (index: any) => {\n    setTokens (\n      tokens?.map((token, i) => {\n        return (\n          (i === index) ? \n            {...token, \n              amount: token.amount + 1,\n              balance: token.price * (token.amount + 1)} : \n            {...token}\n        )\n          \n      }))\n    }\n\n  return (\n    <div>\n      <Container className=\"py-5\">\n        <h4 className='pb-2'>Invesments Tokens</h4>\n        <Card className=\"rounded\">\n          <Card.Body>\n            <Table className=\"table-borderless\">\n              <thead className=\"border-button\">\n                <tr>\n                  <th>#</th>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Fees</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n\n              <tbody className=\"border-top\">\n              \n                 {tokens?.map((token, index) => (\n                  <tr key={index}>\n                    <td>\n                      <img\n                        src={token.image}\n                        alt=\"\"\n                        width=\"23\"\n                        className=\"me-2 rounded\"\n                      ></img>\n                    </td>\n                    <td>{token.symbol}</td>\n                    <td>{token.name}</td>\n                    <td>{token.fee}</td>\n                    <td>\n                      <Button \n                        className=\"me-2 btn-sm\"\n                        onClick={()=>handleInvest(index)}\n                      >\n                        Invest\n                      </Button>\n                      <Button className=\"me-2 btn-sm\">View</Button>\n                    </td>\n                  </tr>\n                ))} \n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  )\n}\n","import { Container } from 'react-bootstrap'\n\nimport { Telegram, Github, Twitter } from 'react-bootstrap-icons'\n\nexport const Footer = () => {\n  return (\n    <Container fluid className=\"px-4 fixed-bottom\">\n      <footer className=\"d-flex flex-wrap justify-content-between align-items-center py-1 my-4 border-top\">\n          \n        <div className=\"col-md-4 d-flex align-items-center pt-2\">\n          <span className=\"text-muted\">&copy; 2021 Common Sense, Inc</span>\n        </div>\n\n        <ul className=\"nav col-md-4 justify-content-end list-unstyled d-flex pt-2\">\n          <li className=\"ms-3\">\n            <a className=\"text-muted\" href=\"/\">\n              <Telegram />\n            </a>\n          </li>\n          <li className=\"ms-3\">\n            <a className=\"text-muted\" href=\"/\">\n              <Github />\n            </a>\n          </li>\n          <li className=\"ms-3\">\n            <a className=\"text-muted\" href=\"/\">\n              <Twitter />\n            </a>\n          </li>\n        </ul>\n        \n      </footer>\n      \n    </Container>\n  )\n}\n","import React from 'react'\nimport Providers from './Providers'\n\nimport { NavBar } from './components/NavBar'\nimport { Hero } from './components/Hero'\nimport { Tokens } from './components/Tokens'\nimport { Footer } from './components/Footer'\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Providers>\n        <NavBar />\n        <Hero />\n        <Tokens />\n        <Footer />\n      </Providers>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}